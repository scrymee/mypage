# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  issues:
    types: [opened, edited, deleted]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    if: ${{ github.event.label.name == 'publish' }}
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.114.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: リポジトリの環境を仮想環境に作成（CheckOut）
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: DEBUG
        env:
          DEBUG: ${{ toJson(github.event) }}
        run: echo "$DEBUG"
      - name: unlabeled
        if: ${{ github.event.action == 'delete'}}
        env: 
          POST_ID: ${{ github.event.issue.id }}
        run: |
          find . -name $POST_ID.md 
          find . -name $POST_ID.md | xargs rm
          find . -name $POST_ID.md 
          echo 'end'
      - name: Hugoの記法に合わせてファイルを生成（Generate Post）
        if: ${{ github.event.action == 'opened' || github.event.action == 'edited' }}
        env:
          POST_TITLE: ${{ github.event.issue.title }}
          POST_BODY: ${{ github.event.issue.body }}
          POST_ID: ${{ github.event.issue.id }}
          POST_CATEGORY: ${{ github.event.issue.labels[0].name }}
        run: |
           YEAR=`date "+%Y"`
           MONTH=`date "+%m"`
           mkdir -p content/posts/$YEAR/$MONTH
           touch content/posts/$YEAR/_index.md
           touch content/posts/$YEAR/$MONTH/_index.md
           cd content/posts/$YEAR/$MONTH
           cat > $POST_ID.md <<EOF
           ---
           draft: false
           title: $POST_TITLE
           date: ${{ github.event.issue.updated_at }}
           slug: $POST_ID
           category: ["${POST_CATEGORY}"]
           thumbnailImagePosition: "top"
           thumbnailImage: //d1u9biwaxjngwg.cloudfront.net/welcome-to-tranquilpeak/city-750.jpg
           coverImage: //d1u9biwaxjngwg.cloudfront.net/welcome-to-tranquilpeak/city.jpg
           metaAlignment: center
           ---
           「$POST_TITLE」に関しての考えをまとめました。
           <!--more-->
           
           {{< toc >}}

           $POST_BODY
      - name: 静的ファイルの生成(Build with Hugo)
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"   
      - name: docs以下のファイルをpush
        env: 
          EMAIL: ${{secrets.EMAIL}}
        run: |
           date > genereate.txt
           git config user.name scrymee
           git config user.email "$EMAIL"
           git add ./docs
           git add ./content
           git status
           git commit -m 'update static pages'
           git push
